{"version":3,"sources":["plugins/unpkg-path-plugin.ts","index.tsx"],"names":["fileCache","localForage","createInstance","name","unpkgPathPlugin","inputCode","setup","build","onResolve","filter","args","a","console","log","path","namespace","includes","URL","resolveDir","href","onLoad","loader","contents","getItem","cachedResult","axios","get","data","request","result","responseURL","pathname","setItem","App","ref","useRef","useState","input","setInput","code","setCode","startService","esbuild","worker","wasmURL","current","useEffect","onClick","entryPoints","bundle","write","plugins","define","global","outputFiles","text","value","onChange","e","target","ReactDOM","render","document","querySelector"],"mappings":"iMAKMA,E,OAAYC,EAAYC,eAAe,CACzCC,KAAM,cAGGC,EAAkB,SAACC,GAC5B,MAAO,CACHF,KAAM,oBACNG,MAFG,SAEGC,GACFA,EAAMC,UAAU,CAAEC,OAAQ,MAA1B,uCAAkC,WAAOC,GAAP,SAAAC,EAAA,yDAC9BC,QAAQC,IAAI,YAAaH,GACP,aAAdA,EAAKI,KAFqB,yCAGnB,CAAEA,KAAMJ,EAAKI,KAAMC,UAAW,MAHX,WAM1BL,EAAKI,KAAKE,SAAS,QAASN,EAAKI,KAAKE,SAAS,OANrB,yCAOnB,CACHD,UAAW,IACXD,KAAM,IAAIG,IAAIP,EAAKI,KAAM,oBAAsBJ,EAAKQ,WAAa,KAAKC,OAThD,gCAavB,CACHJ,UAAW,IACXD,KAAK,qBAAD,OAAuBJ,EAAKI,QAfN,2CAAlC,uDAmBAP,EAAMa,OAAO,CAAEX,OAAQ,MAAvB,uCAA+B,WAAOC,GAAP,uBAAAC,EAAA,yDAC3BC,QAAQC,IAAI,SAAUH,GAEJ,aAAdA,EAAKI,KAHkB,yCAIhB,CACHO,OAAQ,MACRC,SAAUjB,IANS,uBAUAL,EAAUuB,QAA8Bb,EAAKI,MAV7C,YAUrBU,EAVqB,iDAahBA,GAbgB,wBAgBKC,IAAMC,IAAIhB,EAAKI,MAhBpB,wBAgBnBa,EAhBmB,EAgBnBA,KAAMC,EAhBa,EAgBbA,QAERC,EAA+B,CACjCR,OAAQ,MACRC,SAAUK,EACVT,WAAY,IAAID,IAAI,KAAMW,EAAQE,aAAaC,UArBxB,UAwBrB/B,EAAUgC,QAAQtB,EAAKI,KAAMe,GAxBR,iCAyBpBA,GAzBoB,4CAA/B,0D,OC1BNI,EAAM,WACR,IAAMC,EAAMC,mBACZ,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEMC,EAAY,uCAAG,sBAAA9B,EAAA,sEACG+B,eAAqB,CACrCC,QAAQ,EACRC,QAAS,uDAHI,OACjBV,EAAIW,QADa,kDAAH,qDAOlBC,qBAAU,WACNL,MACD,IAEH,IAAMM,EAAO,uCAAG,4BAAApC,EAAA,yDACPuB,EAAIW,QADG,iEAKSX,EAAIW,QAAQtC,MAAM,CACnCyC,YAAa,CAAC,YACdC,QAAQ,EACRC,OAAO,EACPC,QAAS,CAAC/C,EAAgBiC,IAC1Be,OAAQ,CACJ,uBAAwB,eACxBC,OAAQ,YAZJ,OAKNxB,EALM,OAkBZW,EAAQX,EAAOyB,YAAY,GAAGC,MAlBlB,2CAAH,qDAqBb,OACI,gCACI,0BACIC,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OAAOpB,EAASoB,EAAEC,OAAOH,UAEvC,8BACI,wBAAQT,QAASA,EAAjB,sBAEJ,8BAAMR,QAKlBqB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.eacc0089.chunk.js","sourcesContent":["import * as esbuild from 'esbuild-wasm';\r\nimport axios from \"axios\";\r\nimport localForage from 'localforage'\r\nimport { OnLoadArgs, OnResolveArgs } from \"esbuild-wasm\";\r\n\r\nconst fileCache = localForage.createInstance({\r\n    name: 'filecache'\r\n});\r\n\r\nexport const unpkgPathPlugin = (inputCode: string) => {\r\n    return {\r\n        name: 'unpkg-path-plugin',\r\n        setup(build: esbuild.PluginBuild) {\r\n            build.onResolve({ filter: /.*/ }, async (args: OnResolveArgs) => {\r\n                console.log('onResolve', args);\r\n                if (args.path === 'index.js') {\r\n                    return { path: args.path, namespace: 'a' };\r\n                }\r\n\r\n                if (args.path.includes('./') || args.path.includes('../')) {\r\n                    return {\r\n                        namespace: 'a',\r\n                        path: new URL(args.path, 'https://unpkg.com' + args.resolveDir + '/').href\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    namespace: 'a',\r\n                    path: `https://unpkg.com/${args.path}`,\r\n                }\r\n            });\r\n\r\n            build.onLoad({ filter: /.*/ }, async (args: OnLoadArgs) => {\r\n                console.log('onLoad', args);\r\n\r\n                if (args.path === 'index.js') {\r\n                    return {\r\n                        loader: 'jsx',\r\n                        contents: inputCode,\r\n                    };\r\n                }\r\n\r\n                const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(args.path);\r\n\r\n                if (cachedResult) {\r\n                    return cachedResult\r\n                }\r\n\r\n                const { data, request } = await axios.get(args.path)\r\n\r\n                const result: esbuild.OnLoadResult = {\r\n                    loader: 'jsx',\r\n                    contents: data,\r\n                    resolveDir: new URL('./', request.responseURL).pathname,\r\n                }\r\n\r\n                await fileCache.setItem(args.path, result);\r\n                return result;\r\n            });\r\n        },\r\n    };\r\n};\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport * as esbuild from 'esbuild-wasm';\r\nimport ReactDOM from \"react-dom\";\r\nimport {unpkgPathPlugin} from \"./plugins/unpkg-path-plugin\";\r\n\r\n\r\nconst App = () => {\r\n    const ref = useRef<esbuild.Service>();\r\n    const [input, setInput] = useState('');\r\n    const [code, setCode] = useState('');\r\n\r\n    const startService = async () => {\r\n        ref.current = await esbuild.startService({\r\n            worker: true,\r\n            wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm'\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        startService();\r\n    }, [])\r\n\r\n    const onClick = async () => {\r\n        if (!ref.current) {\r\n            return;\r\n        }\r\n\r\n        const result = await ref.current.build({\r\n            entryPoints: ['index.js'],\r\n            bundle: true,\r\n            write: false,\r\n            plugins: [unpkgPathPlugin(input)],\r\n            define: {\r\n                'process.env.NODE_ENV': '\"production\"',\r\n                global: 'window'\r\n            }\r\n        })\r\n\r\n        // console.log(result)\r\n\r\n        setCode(result.outputFiles[0].text)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <textarea\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n            />\r\n            <div>\r\n                <button onClick={onClick}>Submit</button>\r\n            </div>\r\n            <pre>{code}</pre>\r\n        </div>\r\n    )\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}