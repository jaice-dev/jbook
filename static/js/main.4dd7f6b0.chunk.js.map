{"version":3,"sources":["index.tsx","plugins/unpkg-path-plugin.ts"],"names":["App","ref","useRef","useState","input","setInput","code","setCode","startService","a","esbuild","worker","wasmURL","current","useEffect","onClick","build","entryPoints","bundle","write","plugins","name","setup","onResolve","filter","args","console","log","path","namespace","includes","URL","resolveDir","href","onLoad","loader","contents","axios","get","data","request","responseURL","pathname","define","global","result","outputFiles","text","value","onChange","e","target","ReactDOM","render","document","querySelector"],"mappings":"gMAMMA,EAAM,WACR,IAAMC,EAAMC,mBACZ,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEMC,EAAY,uCAAG,sBAAAC,EAAA,sEACGC,eAAqB,CACrCC,QAAQ,EACRC,QAAS,uDAHI,OACjBX,EAAIY,QADa,kDAAH,qDAOlBC,qBAAU,WACNN,MACD,IAEH,IAAMO,EAAO,uCAAG,4BAAAN,EAAA,yDACPR,EAAIY,QADG,iEAKSZ,EAAIY,QAAQG,MAAM,CACnCC,YAAa,CAAC,YACdC,QAAQ,EACRC,OAAO,EACPC,QAAS,CC3BV,CACHC,KAAM,oBACNC,MAFG,SAEGN,GACFA,EAAMO,UAAU,CAAEC,OAAQ,MAA1B,uCAAkC,WAAOC,GAAP,SAAAhB,EAAA,yDAC9BiB,QAAQC,IAAI,YAAaF,GACP,aAAdA,EAAKG,KAFqB,yCAGnB,CAAEA,KAAMH,EAAKG,KAAMC,UAAW,MAHX,WAM1BJ,EAAKG,KAAKE,SAAS,QAASL,EAAKG,KAAKE,SAAS,OANrB,yCAOnB,CACHD,UAAW,IACXD,KAAM,IAAIG,IAAIN,EAAKG,KAAM,oBAAsBH,EAAKO,WAAa,KAAKC,OAThD,gCAavB,CACHJ,UAAW,IACXD,KAAK,qBAAD,OAAuBH,EAAKG,QAfN,2CAAlC,uDAmBAZ,EAAMkB,OAAO,CAAEV,OAAQ,MAAvB,uCAA+B,WAAOC,GAAP,mBAAAhB,EAAA,yDAC3BiB,QAAQC,IAAI,SAAUF,GAEJ,aAAdA,EAAKG,KAHkB,yCAIhB,CACHO,OAAQ,MACRC,SAAS,+IANU,uBAaKC,IAAMC,IAAIb,EAAKG,MAbpB,uBAanBW,EAbmB,EAanBA,KAAMC,EAba,EAabA,QAba,kBAcpB,CACHL,OAAQ,MACRC,SAAUG,EACVP,WAAY,IAAID,IAAI,KAAMS,EAAQC,aAAaC,WAjBxB,2CAA/B,0DDMAC,OAAQ,CACJ,uBAAwB,eACxBC,OAAQ,YAZJ,OAKNC,EALM,OAkBZtC,EAAQsC,EAAOC,YAAY,GAAGC,MAlBlB,2CAAH,qDAqBb,OACI,gCACI,0BACIC,MAAO5C,EACP6C,SAAU,SAACC,GAAD,OAAO7C,EAAS6C,EAAEC,OAAOH,UAEvC,8BACI,wBAAQjC,QAASA,EAAjB,sBAEJ,8BAAMT,QAKlB8C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.4dd7f6b0.chunk.js","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport * as esbuild from 'esbuild-wasm';\r\nimport ReactDOM from \"react-dom\";\r\nimport {unpkgPathPlugin} from \"./plugins/unpkg-path-plugin\";\r\n\r\n\r\nconst App = () => {\r\n    const ref = useRef<any>();\r\n    const [input, setInput] = useState('');\r\n    const [code, setCode] = useState('');\r\n\r\n    const startService = async () => {\r\n        ref.current = await esbuild.startService({\r\n            worker: true,\r\n            wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm'\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        startService();\r\n    }, [])\r\n\r\n    const onClick = async () => {\r\n        if (!ref.current) {\r\n            return;\r\n        }\r\n\r\n        const result = await ref.current.build({\r\n            entryPoints: ['index.js'],\r\n            bundle: true,\r\n            write: false,\r\n            plugins: [unpkgPathPlugin()],\r\n            define: {\r\n                'process.env.NODE_ENV': '\"production\"',\r\n                global: 'window'\r\n            }\r\n        })\r\n\r\n        // console.log(result)\r\n\r\n        setCode(result.outputFiles[0].text)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <textarea\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n            />\r\n            <div>\r\n                <button onClick={onClick}>Submit</button>\r\n            </div>\r\n            <pre>{code}</pre>\r\n        </div>\r\n    )\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n","import * as esbuild from 'esbuild-wasm';\r\nimport axios from \"axios\";\r\n\r\nexport const unpkgPathPlugin = () => {\r\n    return {\r\n        name: 'unpkg-path-plugin',\r\n        setup(build: esbuild.PluginBuild) {\r\n            build.onResolve({ filter: /.*/ }, async (args: any) => {\r\n                console.log('onResolve', args);\r\n                if (args.path === 'index.js') {\r\n                    return { path: args.path, namespace: 'a' };\r\n                }\r\n\r\n                if (args.path.includes('./') || args.path.includes('../')) {\r\n                    return {\r\n                        namespace: 'a',\r\n                        path: new URL(args.path, 'https://unpkg.com' + args.resolveDir + '/').href\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    namespace: 'a',\r\n                    path: `https://unpkg.com/${args.path}`,\r\n                }\r\n            });\r\n\r\n            build.onLoad({ filter: /.*/ }, async (args: any) => {\r\n                console.log('onLoad', args);\r\n\r\n                if (args.path === 'index.js') {\r\n                    return {\r\n                        loader: 'jsx',\r\n                        contents: `\r\n                            import {useState} from 'react'\r\n                            console.log(useState);\r\n                        `,\r\n                    };\r\n                }\r\n\r\n                const { data, request } = await axios.get(args.path)\r\n                return {\r\n                    loader: 'jsx',\r\n                    contents: data,\r\n                    resolveDir: new URL('./', request.responseURL).pathname,\r\n                }\r\n            });\r\n        },\r\n    };\r\n};\r\n"],"sourceRoot":""}